plugins {
    id 'java'
    id 'application'
}

version '1.0-SNAPSHOT'
def vertxVersion = '3.6.3'

sourceCompatibility = 1.9
mainClassName = 'endpoint.Main'

repositories {
    mavenCentral()
}

dependencies {
    compile "io.vertx:vertx-core:$vertxVersion"
    compile "io.vertx:vertx-web-api-contract:$vertxVersion"
    compile "io.vertx:vertx-codegen:$vertxVersion:processor"
    compile "io.vertx:vertx-web-api-service:$vertxVersion"
    compile "io.vertx:vertx-service-proxy:$vertxVersion"
    compile "io.vertx:vertx-auth-oauth2:$vertxVersion"
    compile "io.vertx:vertx-auth-jwt:$vertxVersion"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    generated{
        java.srcDir "${projectDir}/src/generated/java"
    }
    main {
        java.srcDirs =  ["${projectDir}/src/main/java",
                         "${projectDir}/src/generated/java"]

    }
}

task generateProxies(type: JavaCompile, group: 'build',
        description: 'Generates the Vertx proxies') {
    source = sourceSets.main.java // input source set
    classpath = configurations.compile //+ configurations.vertx // add processor module to classpath
    // specify javac arguments
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor", // vertx processor here
            "-Acodegen.output=${projectDir}/src/main"
    ]
    // specify output of generated code
    destinationDir = file("${projectDir}/src/generated/java")
}

